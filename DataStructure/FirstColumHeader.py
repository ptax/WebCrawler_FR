# -*- coding: utf-8 -*-
import sys
reload(sys)
sys.setdefaultencoding('utf-8')
import collections


def GetHeader(Delimiter):
    DictHeader = {1:'InseeXls_CodeCommune',
                  2:'InseeXls_NameCommune',
                  3:'InseeXls_Population',
                  4:'Wiki_UrlInCommune',
                  5:'W_Pays',
                  6:'W_Region',
                  7:'W_Departement',
                  8:'W_Arrondissement',
                  9:'W_Canton',
                  10:'W_Intercommunalite',
                  11:'W_CodePostal',
                  12:'W_CodeCommune',
                  13:'W_Population',
                  14:'W_Densite',
                  15:'W_Cordommees',
                  16:'W_Altitude',
                  17:'W_Superficie',
                  18:'W_Name_ru',
                  19:'W_Name_uk',
                  20:'W_Name_en',
                  21:'W_Name_de',
                  22:'W_Name_pl',
                  23:'W_Name_es',
                  24:'W_Name_pt',
                  25:'W_Name_it',
                  26:'W_Name_nl',
                  27:'W_Name_da',
                  28:'W_Name_no',
                  29:'W_Name_sv',
                  30:'W_Name_cs',
                  31:'W_Name_ro',
                  32:'W_Name_bg',
                  33:'W_Name_hu',
                  34:'W_Name_sk',
                  35:'W_Name_sl',
                  36:'W_Name_sh',
                  37:'W_Name_hr',
                  38:'W_Url_ru',
                  39:'W_Url_uk',
                  40:'W_Url_en',
                  41:'W_Url_de',
                  42:'W_Url_pl',
                  43:'W_Url_es',
                  44:'W_Url_pt',
                  45:'W_Url_it',
                  46:'W_Url_nl',
                  47:'W_Url_da',
                  48:'W_Url_no',
                  49:'W_Url_sv',
                  50:'W_Url_cs',
                  51:'W_Url_ro',
                  52:'W_Url_bg',
                  53:'W_Url_hu',
                  54:'W_Url_sk',
                  55:'W_Url_sl',
                  56:'W_Url_sh',
                  57:'W_Url_hr',
                  58:'G_Coordinates_northeast_Lat_1',
                  59:'G_Coordinates_northeast_Lng_1',
                  60:'G_Coordinates_southwest_Lat_2',
                  61:'G_Coordinates_southwest_Lng_2',
                  62:'G_Coordinates_location_Lat_3',
                  63:'G_Coordinates_location_Lng_3',
                  64:'G_AddressComponents_locality_LongName',
                  65:'G_AddressComponents_locality_Types',
                  66:'G_AddressComponents_locality_ShortName',
                  67:'G_AddressComponents_localityLevel_2_LongName',
                  68:'G_AddressComponents_localityLevel_2_Types',
                  69:'G_AddressComponents_localityLevel_2_ShortName',
                  70:'G_AddressComponents_localityLevel_1_LongName',
                  71:'G_AddressComponents_localityLevel_1_Types',
                  72:'G_AddressComponents_localityLevel_1_ShortName',
                  73:'G_AddressComponents_localityCountry_LongName',
                  74:'G_AddressComponents_localityCountry_Types',
                  75:'G_AddressComponents_localityCountry_ShortName',
                  76:'G_FormatAddress',
                  77:'G_Types',
                  78:'G_PlaceId'


                  }


    DictHeader = collections.OrderedDict(sorted(DictHeader.items()))
    ListHeader = []
    for Header in DictHeader.values():
        ListHeader.append(Header)
    return Delimiter.join(ListHeader)


def GetHeader_2(Delimiter):
    DictHeader = {1:'InseeXls_CodeCommune',
                  2:'InseeXls_NameCommune',
                  3:'InseeXls_Population',
                  4:'Wiki_UrlInCommune',
                  5:'W_Pays',
                  6:'W_Region',
                  7:'W_Departement',
                  8:'W_Arrondissement',
                  9:'W_Canton',
                  10:'W_Intercommunalite',
                  11:'W_CodePostal',
                  12:'W_CodeCommune',
                  13:'W_Population',
                  14:'W_Densite',
                  15:'W_Cordommees',
                  16:'W_Altitude',
                  17:'W_Superficie',
                  18:'W_Name_ru',
                  19:'W_Name_uk',
                  20:'W_Name_en',
                  21:'W_Name_de',
                  22:'W_Name_pl',
                  23:'W_Name_es',
                  24:'W_Name_pt',
                  25:'W_Name_it',
                  26:'W_Name_nl',
                  27:'W_Name_da',
                  28:'W_Name_no',
                  29:'W_Name_sv',
                  30:'W_Name_cs',
                  31:'W_Name_ro',
                  32:'W_Name_bg',
                  33:'W_Name_hu',
                  34:'W_Name_sk',
                  35:'W_Name_sl',
                  36:'W_Name_sh',
                  37:'W_Name_hr',
                  38:'W_Url_ru',
                  39:'W_Url_uk',
                  40:'W_Url_en',
                  41:'W_Url_de',
                  42:'W_Url_pl',
                  43:'W_Url_es',
                  44:'W_Url_pt',
                  45:'W_Url_it',
                  46:'W_Url_nl',
                  47:'W_Url_da',
                  48:'W_Url_no',
                  49:'W_Url_sv',
                  50:'W_Url_cs',
                  51:'W_Url_ro',
                  52:'W_Url_bg',
                  53:'W_Url_hu',
                  54:'W_Url_sk',
                  55:'W_Url_sl',
                  56:'W_Url_sh',
                  57:'W_Url_hr',
                  58:'G_Coordinates_northeast_Lat_1',
                  59:'G_Coordinates_northeast_Lng_1',
                  60:'G_Coordinates_southwest_Lat_2',
                  61:'G_Coordinates_southwest_Lng_2',
                  62:'G_Coordinates_location_Lat_3',
                  63:'G_Coordinates_location_Lng_3',

                  64:'G_PlaceId',

                  65:'How_Get_GooglePlaceID',
                  66:'G_Locality_long_name',
                  67:'G_Locality_short_name',
                  68:'G_Locality_types',
                  69:'G_AdminLevel_1_long_name',
                  70:'G_AdminLevel_1_short_name',
                  71:'G_AdminLevel_1_types',
                  72:'G_AdminLevel_2_long_name',
                  73:'G_AdminLevel_2_short_name',
                  74:'G_AdminLevel_2_types',
                  75:'G_Country_long_name',
                  76:'G_Country_short_name',
                  77:'G_Country_types',
                  78:'G_postal_code_long_name',
                  79:'G_postal_code_short_name',
                  80:'G_postal_code_types',
                  81:'G_FormatAddress',
                  82:'G_Types',
                  83:'W_Cordommees_Convert',
                  84:'G_Name_ru',
                  85:'G_Name_uk',
                  86:'G_Name_en',
                  87:'F_Compare_InseeXls_CodeCommune_W_CodeCommune',
                  88:'F_Compare_InseeXls_NameCommune_Wiki_Url',
                  89:'F_Compare_InseeXls_NameCommune_G_Locality_long_name',
                  90:'Wiki_UrlInCommuneSnipet',
                  91:'Wiki_NameSnipet',
                  92:'Wiki_Old_UrlInCommune',
                  93:'Wiki_Old_NameSnipet',
                  94: 'ColResultInSnipet',
                  95: 'Wiki_NameSnipet_lower',
                  96: 'G_Locality_short_name_lower',
                  97: 'F_Compare_Wiki_NameSnipet_G_Locality_short_name_equally',
                  98: 'F_Compare_Wiki_NameSnipet_G_Locality_short_name_percentage',
                  99: 'F_Compare_Wiki_NameSnipet_G_Locality_short_name_percentage_more_or_equal_80',
                  100: 'W_Departement_status',
                  101: 'W_Arrondissement_status',
                  102: 'W_Canton_status'



                  }


    DictHeader = collections.OrderedDict(sorted(DictHeader.items()))
    ListHeader = []
    for Header in DictHeader.values():
        ListHeader.append(Header)
    return Delimiter.join(ListHeader)

if __name__ == '__main__':
   print GetHeader('\t')